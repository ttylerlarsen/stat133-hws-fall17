dat$missed_FG <- dat$FGA - dat$FGM
dat$missed_FT <- dat$FTA - dat$FTM
dat$PTS <- 2*dat$Points2 + 3*dat$Points3 + dat$FTM
dat$REB <- dat$DREB + dat$OREB
dat$MPG <- dat$MIN / dat$GP
#EFF
dat$EFF <- (dat$PTS + dat$REB + dat$AST + dat$STL + dat$BLK - dat$missed_FG - dat$missed_FT - dat$TO) / dat$GP
summary(dat$EFF)
top_EEF <- data.frame("Player" = dat$Player, "Team" = dat$Team, "Salary" = dat$Salary, "EFF" = dat$EFF)
top_EEF <- top_EEF[order(top_EEF$EFF, decreasing = TRUE), ]
head(top_EEF, 10)
subset(dat, dat$EFF < 0)
pts_cor <- cor(dat$EFF, dat$PTS)
reb_cor <- cor(dat$EFF, dat$REB)
ast_cor <- cor(dat$EFF, dat$AST)
stl_cor <- cor(dat$EFF, dat$STL)
blk_cor <- cor(dat$EFF, dat$BLK)
missed_fg_cor <- -1 * cor(dat$EFF, dat$missed_FG)
missed_ft_cor <- -1 * cor(dat$EFF, dat$missed_FT)
to_cor <- -2 * cor(dat$EFF, dat$TO)
EFF_cor <- c(pts_cor, reb_cor, ast_cor, stl_cor, blk_cor, missed_fg_cor, missed_ft_cor, to_cor)
EFF_cor
ggplot(data = EFF_cor, aes(x = EFF_cor)) +
geom_col()
#additional variables needed to compute EFF
dat$missed_FG <- dat$FGA - dat$FGM
dat$missed_FT <- dat$FTA - dat$FTM
dat$PTS <- 2*dat$Points2 + 3*dat$Points3 + dat$FTM
dat$REB <- dat$DREB + dat$OREB
dat$MPG <- dat$MIN / dat$GP
#EFF
dat$EFF <- (dat$PTS + dat$REB + dat$AST + dat$STL + dat$BLK - dat$missed_FG - dat$missed_FT - dat$TO) / dat$GP
summary(dat$EFF)
top_EEF <- data.frame("Player" = dat$Player, "Team" = dat$Team, "Salary" = dat$Salary, "EFF" = dat$EFF)
top_EEF <- top_EEF[order(top_EEF$EFF, decreasing = TRUE), ]
head(top_EEF, 10)
subset(dat, dat$EFF < 0)
pts_cor <- cor(dat$EFF, dat$PTS)
reb_cor <- cor(dat$EFF, dat$REB)
ast_cor <- cor(dat$EFF, dat$AST)
stl_cor <- cor(dat$EFF, dat$STL)
blk_cor <- cor(dat$EFF, dat$BLK)
missed_fg_cor <- -1 * cor(dat$EFF, dat$missed_FG)
missed_ft_cor <- -1 * cor(dat$EFF, dat$missed_FT)
to_cor <- -2 * cor(dat$EFF, dat$TO)
EFF_cor <- c(pts_cor, reb_cor, ast_cor, stl_cor, blk_cor, missed_fg_cor, missed_ft_cor, to_cor)
EFF_cor
barplot(EFF_cor)
#additional variables needed to compute EFF
dat$missed_FG <- dat$FGA - dat$FGM
dat$missed_FT <- dat$FTA - dat$FTM
dat$PTS <- 2*dat$Points2 + 3*dat$Points3 + dat$FTM
dat$REB <- dat$DREB + dat$OREB
dat$MPG <- dat$MIN / dat$GP
#EFF
dat$EFF <- (dat$PTS + dat$REB + dat$AST + dat$STL + dat$BLK - dat$missed_FG - dat$missed_FT - dat$TO) / dat$GP
summary(dat$EFF)
top_EEF <- data.frame("Player" = dat$Player, "Team" = dat$Team, "Salary" = dat$Salary, "EFF" = dat$EFF)
top_EEF <- top_EEF[order(top_EEF$EFF, decreasing = TRUE), ]
head(top_EEF, 10)
subset(dat, dat$EFF < 0)
pts_cor <- cor(dat$EFF, dat$PTS)
reb_cor <- cor(dat$EFF, dat$REB)
ast_cor <- cor(dat$EFF, dat$AST)
stl_cor <- cor(dat$EFF, dat$STL)
blk_cor <- cor(dat$EFF, dat$BLK)
missed_fg_cor <- -1 * cor(dat$EFF, dat$missed_FG)
missed_ft_cor <- -1 * cor(dat$EFF, dat$missed_FT)
to_cor <- -2 * cor(dat$EFF, dat$TO)
EFF_cor <- c(pts_cor, reb_cor, ast_cor, stl_cor, blk_cor, missed_fg_cor, missed_ft_cor, to_cor)
EFF_cor
barplot(EFF_cor, names.arg = c("Points", "Rebounds", "Assists", "Steals", "Blocks", "Missed FG", "Missted FT", "Turnovers"))
#additional variables needed to compute EFF
dat$missed_FG <- dat$FGA - dat$FGM
dat$missed_FT <- dat$FTA - dat$FTM
dat$PTS <- 2*dat$Points2 + 3*dat$Points3 + dat$FTM
dat$REB <- dat$DREB + dat$OREB
dat$MPG <- dat$MIN / dat$GP
#EFF
dat$EFF <- (dat$PTS + dat$REB + dat$AST + dat$STL + dat$BLK - dat$missed_FG - dat$missed_FT - dat$TO) / dat$GP
summary(dat$EFF)
top_EEF <- data.frame("Player" = dat$Player, "Team" = dat$Team, "Salary" = dat$Salary, "EFF" = dat$EFF)
top_EEF <- top_EEF[order(top_EEF$EFF, decreasing = TRUE), ]
head(top_EEF, 10)
subset(dat, dat$EFF < 0)
pts_cor <- cor(dat$EFF, dat$PTS)
reb_cor <- cor(dat$EFF, dat$REB)
ast_cor <- cor(dat$EFF, dat$AST)
stl_cor <- cor(dat$EFF, dat$STL)
blk_cor <- cor(dat$EFF, dat$BLK)
missed_fg_cor <- -1 * cor(dat$EFF, dat$missed_FG)
missed_ft_cor <- -1 * cor(dat$EFF, dat$missed_FT)
to_cor <- -2 * cor(dat$EFF, dat$TO)
EFF_cor <- c(pts_cor, reb_cor, ast_cor, stl_cor, blk_cor, missed_fg_cor, missed_ft_cor, to_cor)
EFF_cor
barplot(EFF_cor, names.arg = c("Points", "Rebounds", "Assists", "Steals", "Blocks", "Missed FG", "Missed FT", "Turnovers"))
#additional variables needed to compute EFF
dat$missed_FG <- dat$FGA - dat$FGM
dat$missed_FT <- dat$FTA - dat$FTM
dat$PTS <- 2*dat$Points2 + 3*dat$Points3 + dat$FTM
dat$REB <- dat$DREB + dat$OREB
dat$MPG <- dat$MIN / dat$GP
#EFF
dat$EFF <- (dat$PTS + dat$REB + dat$AST + dat$STL + dat$BLK - dat$missed_FG - dat$missed_FT - dat$TO) / dat$GP
summary(dat$EFF)
top_EEF <- data.frame("Player" = dat$Player, "Team" = dat$Team, "Salary" = dat$Salary, "EFF" = dat$EFF)
top_EEF <- top_EEF[order(top_EEF$EFF, decreasing = TRUE), ]
head(top_EEF, 10)
subset(dat, dat$EFF < 0)
pts_cor <- cor(dat$EFF, dat$PTS)
reb_cor <- cor(dat$EFF, dat$REB)
ast_cor <- cor(dat$EFF, dat$AST)
stl_cor <- cor(dat$EFF, dat$STL)
blk_cor <- cor(dat$EFF, dat$BLK)
missed_fg_cor <- -1 * cor(dat$EFF, dat$missed_FG)
missed_ft_cor <- -1 * cor(dat$EFF, dat$missed_FT)
to_cor <- -2 * cor(dat$EFF, dat$TO)
EFF_cor <- c(pts_cor, reb_cor, ast_cor, stl_cor, blk_cor, missed_fg_cor, missed_ft_cor, to_cor)
EFF_cor
barplot(EFF_cor, names.arg = c("Points", "Rebounds", "Assists", "Steals", "Blocks", "Missed FG", "Missed FT", "Turnovers"), col = "red")
#additional variables needed to compute EFF
dat$missed_FG <- dat$FGA - dat$FGM
dat$missed_FT <- dat$FTA - dat$FTM
dat$PTS <- 2*dat$Points2 + 3*dat$Points3 + dat$FTM
dat$REB <- dat$DREB + dat$OREB
dat$MPG <- dat$MIN / dat$GP
#EFF
dat$EFF <- (dat$PTS + dat$REB + dat$AST + dat$STL + dat$BLK - dat$missed_FG - dat$missed_FT - dat$TO) / dat$GP
summary(dat$EFF)
top_EEF <- data.frame("Player" = dat$Player, "Team" = dat$Team, "Salary" = dat$Salary, "EFF" = dat$EFF)
top_EEF <- top_EEF[order(top_EEF$EFF, decreasing = TRUE), ]
head(top_EEF, 10)
subset(dat, dat$EFF < 0)
pts_cor <- cor(dat$EFF, dat$PTS)
reb_cor <- cor(dat$EFF, dat$REB)
ast_cor <- cor(dat$EFF, dat$AST)
stl_cor <- cor(dat$EFF, dat$STL)
blk_cor <- cor(dat$EFF, dat$BLK)
missed_fg_cor <- -1 * cor(dat$EFF, dat$missed_FG)
missed_ft_cor <- -1 * cor(dat$EFF, dat$missed_FT)
to_cor <- -2 * cor(dat$EFF, dat$TO)
EFF_cor <- c(pts_cor, reb_cor, ast_cor, stl_cor, blk_cor, missed_fg_cor, missed_ft_cor, to_cor)
EFF_cor
barplot(EFF_cor, col = "red")
#additional variables needed to compute EFF
dat$missed_FG <- dat$FGA - dat$FGM
dat$missed_FT <- dat$FTA - dat$FTM
dat$PTS <- 2*dat$Points2 + 3*dat$Points3 + dat$FTM
dat$REB <- dat$DREB + dat$OREB
dat$MPG <- dat$MIN / dat$GP
#EFF
dat$EFF <- (dat$PTS + dat$REB + dat$AST + dat$STL + dat$BLK - dat$missed_FG - dat$missed_FT - dat$TO) / dat$GP
summary(dat$EFF)
top_EEF <- data.frame("Player" = dat$Player, "Team" = dat$Team, "Salary" = dat$Salary, "EFF" = dat$EFF)
top_EEF <- top_EEF[order(top_EEF$EFF, decreasing = TRUE), ]
head(top_EEF, 10)
subset(dat, dat$EFF < 0)
pts_cor <- cor(dat$EFF, dat$PTS)
reb_cor <- cor(dat$EFF, dat$REB)
ast_cor <- cor(dat$EFF, dat$AST)
stl_cor <- cor(dat$EFF, dat$STL)
blk_cor <- cor(dat$EFF, dat$BLK)
missed_fg_cor <- -1 * cor(dat$EFF, dat$missed_FG)
missed_ft_cor <- -1 * cor(dat$EFF, dat$missed_FT)
to_cor <- -2 * cor(dat$EFF, dat$TO)
EFF_cor <- c(pts_cor, reb_cor, ast_cor, stl_cor, blk_cor, missed_fg_cor, missed_ft_cor, to_cor)
EFF_cor <- sort(EFF_cor, decreasing = TRUE)
EFF_cor
barplot(EFF_cor, col = "red")
#additional variables needed to compute EFF
dat$missed_FG <- dat$FGA - dat$FGM
dat$missed_FT <- dat$FTA - dat$FTM
dat$PTS <- 2*dat$Points2 + 3*dat$Points3 + dat$FTM
dat$REB <- dat$DREB + dat$OREB
dat$MPG <- dat$MIN / dat$GP
#EFF
dat$EFF <- (dat$PTS + dat$REB + dat$AST + dat$STL + dat$BLK - dat$missed_FG - dat$missed_FT - dat$TO) / dat$GP
summary(dat$EFF)
top_EEF <- data.frame("Player" = dat$Player, "Team" = dat$Team, "Salary" = dat$Salary, "EFF" = dat$EFF)
top_EEF <- top_EEF[order(top_EEF$EFF, decreasing = TRUE), ]
head(top_EEF, 10)
subset(dat, dat$EFF < 0)
pts_cor <- cor(dat$EFF, dat$PTS)
reb_cor <- cor(dat$EFF, dat$REB)
ast_cor <- cor(dat$EFF, dat$AST)
stl_cor <- cor(dat$EFF, dat$STL)
blk_cor <- cor(dat$EFF, dat$BLK)
missed_fg_cor <- -1 * cor(dat$EFF, dat$missed_FG)
missed_ft_cor <- -1 * cor(dat$EFF, dat$missed_FT)
to_cor <- -1 * cor(dat$EFF, dat$TO)
EFF_cor <- c(pts_cor, reb_cor, ast_cor, stl_cor, blk_cor, missed_fg_cor, missed_ft_cor, to_cor)
EFF_cor <- sort(EFF_cor, decreasing = TRUE)
EFF_cor
barplot(EFF_cor, col = "red")
#additional variables needed to compute EFF
dat$missed_FG <- dat$FGA - dat$FGM
dat$missed_FT <- dat$FTA - dat$FTM
dat$PTS <- 2*dat$Points2 + 3*dat$Points3 + dat$FTM
dat$REB <- dat$DREB + dat$OREB
dat$MPG <- dat$MIN / dat$GP
#EFF
dat$EFF <- (dat$PTS + dat$REB + dat$AST + dat$STL + dat$BLK - dat$missed_FG - dat$missed_FT - dat$TO) / dat$GP
summary(dat$EFF)
top_EEF <- data.frame("Player" = dat$Player, "Team" = dat$Team, "Salary" = dat$Salary, "EFF" = dat$EFF)
top_EEF <- top_EEF[order(top_EEF$EFF, decreasing = TRUE), ]
head(top_EEF, 10)
subset(select(dat, dat$Player, dat$Team, dat$Salary, dat$EFF), dat$EFF < 0)
#additional variables needed to compute EFF
dat$missed_FG <- dat$FGA - dat$FGM
dat$missed_FT <- dat$FTA - dat$FTM
dat$PTS <- 2*dat$Points2 + 3*dat$Points3 + dat$FTM
dat$REB <- dat$DREB + dat$OREB
dat$MPG <- dat$MIN / dat$GP
#EFF
dat$EFF <- (dat$PTS + dat$REB + dat$AST + dat$STL + dat$BLK - dat$missed_FG - dat$missed_FT - dat$TO) / dat$GP
summary(dat$EFF)
top_EEF <- data.frame("Player" = dat$Player, "Team" = dat$Team, "Salary" = dat$Salary, "EFF" = dat$EFF)
top_EEF <- top_EEF[order(top_EEF$EFF, decreasing = TRUE), ]
head(top_EEF, 10)
subset(subset(dat, select = c(dat$Player, dat$Team, dat$Salary, dat$EFF)), dat$EFF < 0)
#additional variables needed to compute EFF
dat$missed_FG <- dat$FGA - dat$FGM
dat$missed_FT <- dat$FTA - dat$FTM
dat$PTS <- 2*dat$Points2 + 3*dat$Points3 + dat$FTM
dat$REB <- dat$DREB + dat$OREB
dat$MPG <- dat$MIN / dat$GP
#EFF
dat$EFF <- (dat$PTS + dat$REB + dat$AST + dat$STL + dat$BLK - dat$missed_FG - dat$missed_FT - dat$TO) / dat$GP
summary(dat$EFF)
top_EEF <- data.frame("Player" = dat$Player, "Team" = dat$Team, "Salary" = dat$Salary, "EFF" = dat$EFF)
top_EEF <- top_EEF[order(top_EEF$EFF, decreasing = TRUE), ]
head(top_EEF, 10)
subset(dat, dat$EFF < 0)
pts_cor <- cor(dat$EFF, dat$PTS)
reb_cor <- cor(dat$EFF, dat$REB)
ast_cor <- cor(dat$EFF, dat$AST)
stl_cor <- cor(dat$EFF, dat$STL)
blk_cor <- cor(dat$EFF, dat$BLK)
missed_fg_cor <- -1 * cor(dat$EFF, dat$missed_FG)
missed_ft_cor <- -1 * cor(dat$EFF, dat$missed_FT)
to_cor <- -1 * cor(dat$EFF, dat$TO)
EFF_cor <- c(pts_cor, reb_cor, ast_cor, stl_cor, blk_cor, missed_fg_cor, missed_ft_cor, to_cor)
EFF_cor <- sort(EFF_cor, decreasing = TRUE)
EFF_cor
barplot(EFF_cor, col = "red")
#additional variables needed to compute EFF
dat$missed_FG <- dat$FGA - dat$FGM
dat$missed_FT <- dat$FTA - dat$FTM
dat$PTS <- 2*dat$Points2 + 3*dat$Points3 + dat$FTM
dat$REB <- dat$DREB + dat$OREB
dat$MPG <- dat$MIN / dat$GP
#EFF
dat$EFF <- (dat$PTS + dat$REB + dat$AST + dat$STL + dat$BLK - dat$missed_FG - dat$missed_FT - dat$TO) / dat$GP
summary(dat$EFF)
top_EEF <- data.frame("Player" = dat$Player, "Team" = dat$Team, "Salary" = dat$Salary, "EFF" = dat$EFF)
top_EEF <- top_EEF[order(top_EEF$EFF, decreasing = TRUE), ]
head(top_EEF, 10)
subset(select(dat,dat$Player, dat$Team, dat$Salary, data$EFF) dat$EFF < 0)
#additional variables needed to compute EFF
dat$missed_FG <- dat$FGA - dat$FGM
dat$missed_FT <- dat$FTA - dat$FTM
dat$PTS <- 2*dat$Points2 + 3*dat$Points3 + dat$FTM
dat$REB <- dat$DREB + dat$OREB
dat$MPG <- dat$MIN / dat$GP
#EFF
dat$EFF <- (dat$PTS + dat$REB + dat$AST + dat$STL + dat$BLK - dat$missed_FG - dat$missed_FT - dat$TO) / dat$GP
summary(dat$EFF)
top_EEF <- data.frame("Player" = dat$Player, "Team" = dat$Team, "Salary" = dat$Salary, "EFF" = dat$EFF)
top_EEF <- top_EEF[order(top_EEF$EFF, decreasing = TRUE), ]
head(top_EEF, 10)
subset(select(dat,dat$Player, dat$Team, dat$Salary, data$EFF), dat$EFF < 0)
library(readr)
library(ggplot2)
library(dplyr)
#additional variables needed to compute EFF
dat$missed_FG <- dat$FGA - dat$FGM
dat$missed_FT <- dat$FTA - dat$FTM
dat$PTS <- 2*dat$Points2 + 3*dat$Points3 + dat$FTM
dat$REB <- dat$DREB + dat$OREB
dat$MPG <- dat$MIN / dat$GP
#EFF
dat$EFF <- (dat$PTS + dat$REB + dat$AST + dat$STL + dat$BLK - dat$missed_FG - dat$missed_FT - dat$TO) / dat$GP
summary(dat$EFF)
top_EEF <- data.frame("Player" = dat$Player, "Team" = dat$Team, "Salary" = dat$Salary, "EFF" = dat$EFF)
top_EEF <- top_EEF[order(top_EEF$EFF, decreasing = TRUE), ]
head(top_EEF, 10)
subset(select(dat,dat$Player, dat$Team, dat$Salary, data$EFF), dat$EFF < 0)
#additional variables needed to compute EFF
dat$missed_FG <- dat$FGA - dat$FGM
dat$missed_FT <- dat$FTA - dat$FTM
dat$PTS <- 2*dat$Points2 + 3*dat$Points3 + dat$FTM
dat$REB <- dat$DREB + dat$OREB
dat$MPG <- dat$MIN / dat$GP
#EFF
dat$EFF <- (dat$PTS + dat$REB + dat$AST + dat$STL + dat$BLK - dat$missed_FG - dat$missed_FT - dat$TO) / dat$GP
summary(dat$EFF)
top_EEF <- data.frame("Player" = dat$Player, "Team" = dat$Team, "Salary" = dat$Salary, "EFF" = dat$EFF)
top_EEF <- top_EEF[order(top_EEF$EFF, decreasing = TRUE), ]
head(top_EEF, 10)
subset(dat, dat$EFF < 0)
pts_cor <- cor(dat$EFF, dat$PTS)
reb_cor <- cor(dat$EFF, dat$REB)
ast_cor <- cor(dat$EFF, dat$AST)
stl_cor <- cor(dat$EFF, dat$STL)
blk_cor <- cor(dat$EFF, dat$BLK)
missed_fg_cor <- -1 * cor(dat$EFF, dat$missed_FG)
missed_ft_cor <- -1 * cor(dat$EFF, dat$missed_FT)
to_cor <- -1 * cor(dat$EFF, dat$TO)
EFF_cor <- c(pts_cor, reb_cor, ast_cor, stl_cor, blk_cor, missed_fg_cor, missed_ft_cor, to_cor)
EFF_cor <- sort(EFF_cor, decreasing = TRUE)
EFF_cor
barplot(EFF_cor, col = "red")
ggplot(dat, aes(x = dat$EFF, y = dat$Salary))+
geom_point()
ggplot(dat, aes(x = dat$EFF, y = dat$Salary), xlab('Efficiency'), ylab('Salary'))+
geom_point()
ggplot(dat, aes(x = dat$EFF, y = dat$Salary), xlab = 'Efficiency', ylab = 'Salary')+
geom_point()
ggplot(dat, aes(x = dat$EFF, y = dat$Salary), xlab = 'Efficiency', ylab = 'Salary')+
geom_point(color = dat$team, size = dat$position)
ggplot(dat, aes(x = dat$EFF, y = dat$Salary), xlab = 'Efficiency', ylab = 'Salary')+
geom_point(aes(color = dat$team, size = dat$position))
ggplot(dat, aes(x = dat$EFF, y = dat$Salary))+
geom_point(aes(color = dat$team, size = dat$position))
ggplot(dat, aes(x = dat$EFF, y = dat$Salary))+
geom_point(aes(color = dat$Team, size = dat$Position))
ggplot(dat, aes(x = dat$EFF, y = dat$Salary))+
geom_point(aes(color = dat$Team))
ggplot(dat, aes(x = dat$EFF, y = dat$Salary, xlab = 'Efficiency'))+
geom_point(aes(color = dat$Team))
ggplot(dat, aes(x = dat$EFF, y = dat$Salary))+
geom_point(aes(color = dat$Team, size = dat$Experience))
ggplot(dat, aes(x = dat$EFF, y = dat$Salary))+
geom_point(aes(color = dat$Team))
ggplot(dat, aes(x = dat$EFF, y = dat$Salary))+
geom_point(aes(color = dat$Team))+
geom_smooth(method = loess)
ggplot(dat, aes(x = dat$EFF, y = dat$Salary))+
geom_point(aes(color = dat$Team))+
geom_smooth(method = loess)
players2 <- subset(dat, dat$Experience > 19)
ggplot(dat, aes(x = dat$EFF, y = dat$Salary))+
geom_point(aes(color = dat$Team))+
geom_smooth(method = loess)
players2 <- subset(dat, dat$Experience > 19)
head(players2)
tail(warriors)
warriors <- data.frame(filter(dat, team == 'gsw'))
warriors <- data.frame(filter(dat, dat$team == 'gsw'))
tail(warriors)
rm(list = ls())
library(readr)    # importing data
summary(dat)
dat2 <- read_csv('nba2017-player-statistics.csv')
str(dat2)
dat2$Player <- as.character(dat2$Player)
dat2$Team <- as.character(dat2$Team)
dat2$Experience <- as.character(dat2$Experience)
dat2$Position <- as.factor(dat2$Position)
dat2$Salary <- as.double(dat2$Salary)
dat2$Rank <- as.integer(dat2$Rank)
dat2$Age <- as.integer(dat2$Age)
dat2$GP <- as.integer(dat2$GP)
dat2$GS <- as.integer(dat2$GS)
dat2$MIN <- as.integer(dat2$MIN)
dat2$FGM <- as.integer(dat2$FGM)
dat2$Points3 <- as.integer(dat2$Points3)
dat2$Points3_atts <- as.integer(dat2$Points3_atts)
dat2$Points2 <- as.integer(dat2$Points2)
dat2$Points2_atts <- as.integer(dat2$Points2_atts)
dat2$PointsFTM <- as.integer(dat2$FTM)
dat2$FTA <- as.integer(dat2$FTA)
dat2$OREB <- as.integer(dat2$OREB)
dat2$DREB <- as.integer(dat2$DREB)
dat2$AST <- as.integer(dat2$AST)
dat2$STL <- as.integer(dat2$STL)
dat2$BLK <- as.integer(dat2$BLK)
dat2$TO <- as.integer(dat2$TO)
rm(list = ls())
library(ggplot2)  # graphics
# packages
library(readr)    # importing data
library(dplyr)    # data wrangling
library(ggplot2)  # graphics
dat <- read_csv('nba2017-player-statistics.csv')
summary(dat)
warriors <- data.frame(filter(dat, dat$Team == 'gsw'))
tail(warriors)
View(warriors)
# packages
library(readr)    # importing data
library(dplyr)    # data wrangling
library(ggplot2)  # graphics
dat <- read_csv('nba2017-player-statistics.csv')
summary(dat)
warriors <- dat[dat$Team == 'gsw',]
tail(warriors)
View(dat)
library(readr)    # importing data
library(dplyr)    # data wrangling
library(ggplot2)  # graphics
dat <- read_csv('nba2017-player-statistics.csv')
summary(dat)
warriors <- dat[dat$Team == 'GSW',]
tail(warriors)
View(dat)
# packages
library(readr)    # importing data
library(dplyr)    # data wrangling
library(ggplot2)  # graphics
dat <- read_csv('nba2017-player-statistics.csv')
warriors <- dat[dat$Team == 'GSW',]
write.csv(warriors, '/Users/tylelarsen/Desktop/stat133/stat133-hws-fall17/labs/lab06/data/warriors.csv', row.names = FALSE, )
# packages
library(readr)    # importing data
library(dplyr)    # data wrangling
library(ggplot2)  # graphics
dat <- read_csv('nba2017-player-statistics.csv')
warriors <- dat[dat$Team == 'GSW',]
write.csv(warriors, 'warriors.csv', row.names = FALSE)
# packages
library(readr)    # importing data
library(dplyr)    # data wrangling
library(ggplot2)  # graphics
dat <- read_csv('nba2017-player-statistics.csv')
warriors <- dat[dat$Team == 'GSW',]
write.csv(warriors, '/Users/tylelarsen/Desktop/stat133/stat133-hws-fall17/labs/lab06/data/warriors.csv', row.names = FALSE)
getwd()
# packages
library(readr)    # importing data
library(dplyr)    # data wrangling
library(ggplot2)  # graphics
dat <- read_csv('nba2017-player-statistics.csv')
warriors <- dat[dat$Team == 'GSW',]
write.csv(warriors, '/Desktop/stat133/stat133-hws-fall17/labs/lab06/data/warriors.csv', row.names = FALSE)
etwd('/users/tylerlarsen/desktop/stat133/stat133-hws-fall17/Labs/lab06/data')
# packages
library(readr)    # importing data
library(dplyr)    # data wrangling
library(ggplot2)  # graphics
dat <- read_csv('nba2017-player-statistics.csv')
warriors <- dat[dat$Team == 'GSW',]
write.csv(warriors, 'warriors.csv', row.names = FALSE)
getwd()
setwd('/users/tylerlarsen/desktop/stat133/stat133-hws-fall17/Labs/lab06/data')
getwd()
# packages
library(readr)    # importing data
library(dplyr)    # data wrangling
library(ggplot2)  # graphics
dat <- read_csv('nba2017-player-statistics.csv')
warriors <- dat[dat$Team == 'GSW',]
write.csv(warriors, 'warriors.csv', row.names = FALSE)
warriors <- filter(dat[dat$Team == 'GSW',])
warriors <- arange(dat[dat$Team == 'GSW',], dat$Salary)
warriors <- arrange(dat[dat$Team == 'GSW',], dat$Salary)
warriors <- arrange(dat[dat$Team == 'GSW',], warriors$Salary)
View(warriors)
warriors <- arrange(dat[dat$Team == 'GSW',], warriors$Salary, decreasing = TRUE)
warriors <- arrange(dat[dat$Team == 'GSW',], warriors$Salary, TRUE)
warriors <- arrange(dat[dat$Team == 'GSW',],desc(warriors$Salary))
View(warriors)
warriors <- arrange(dat[dat$Team == 'GSW',], desc(Salary))
View(warriors)
# packages
library(readr)    # importing data
library(dplyr)    # data wrangling
library(ggplot2)  # graphics
dat <- read_csv('nba2017-player-statistics.csv')
warriors <- arrange(dat[dat$Team == 'GSW',], desc(Salary))
write.csv(warriors, 'warriors.csv', row.names = FALSE)
View(dat)
warriors <- arrange(dat[dat$Team == 'GSW',], desc(Salary))
write.csv(warriors, 'warriors.csv', row.names = FALSE)
lakers <- arrange(dat[dat$Team == 'LAL',], desc(Experience))
write.csv(warriors, 'warriors.csv', row.names = FALSE)
warriors <- arrange(dat[dat$Team == 'GSW',], desc(Salary))
write.csv(warriors, 'warriors.csv', row.names = FALSE)
lakers <- arrange(dat[dat$Team == 'LAL',], desc(Experience))
write.csv(lakers, 'lakers.csv', row.names = FALSE)
sink(file = 'summary-height-weight.txt')
summary(dat[ ,c('height', 'weight')])
sink()
sink(file = 'summary-height-weight.txt')
summary(dat[ ,c(dat$height, dat$weight)])
sink()
sink(file = 'summary-height-weight.txt')
summary(dat[ ,c(height, weight)])
sink()
sink(file = 'summary-height-weight.txt')
summary(dat[c(height, weight), ])
sink()
sink(file = 'summary-height-weight.txt')
summary(dat[c(dat$height, dat$weight), ])
sink()
sink(file = 'summary-height-weight.txt')
summary(dat[c('height', 'weight'), ])
sink()
sink(file = 'summary-height-weight.txt')
summary(dat[,c('height', 'weight')])
sink()
summary(dat[ ,c('height', 'weight')])
setwd('/users/tylerlarsen/desktop/stat133/stat133-hws-fall17/Labs/lab06/output')
sink(file = 'data-structure.txt')
str(dat)
sink()
sink(file = 'summary-warriors.txt')
summary(warriors)
sink()
sink(file = 'summary-lakers.txt')
summary(lakers)
sink()
