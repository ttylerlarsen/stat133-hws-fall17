# ==================================================================
library("dplyr")
setwd('/users/tylerlarsen/desktop/stat133/stat133-hws-fall17/hw03/data')
roster <- read.csv("nba2017-roster.csv")
stats <- read.csv("nba2017-stats.csv")
stats$missed_fg <- stats$field_goals_atts - stats$field_goals_made
stats$missed_ft < stats$points1_atts - stats$points1_made
stats$points <- stats$points1_made + 2*stats$points2_made + 3*stats$points3_made
stats$rebounds <- stats$def_rebounds + stats$off_rebounds
stats$EFF <-  stats$points + stats$rebounds + stats$assists + stats$steals + stats$blocks
- stats$missed_fg - stats$missed_ft - stats$turnovers
View(stats)
View(stats)
# ==================================================================
# Title: HW03
# Description: https://github.com/ucb-stat133/stat133-fall-2017/blob/master/labs/lab06-more-dplyr-ggplot.md
# Input(s): what are the main inputs (list of inputs)
# Output(s): what are the main outputs (list of outputs)
# Author: Tyler Larsen
# Date: 10-15-2017
# ==================================================================
library("dplyr")
setwd('/users/tylerlarsen/desktop/stat133/stat133-hws-fall17/hw03/data')
roster <- read.csv("nba2017-roster.csv")
stats <- read.csv("nba2017-stats.csv")
stats$missed_fg <- stats$field_goals_atts - stats$field_goals_made
stats$missed_ft < stats$points1_atts - stats$points1_made
stats$points <- stats$points1_made + 2*stats$points2_made + 3*stats$points3_made
stats$rebounds <- stats$def_rebounds + stats$off_rebounds
stats$EFF <-  stats$points + stats$rebounds + stats$assists + stats$steals + stats$blocks
- stats$missed_fg - stats$missed_ft - stats$turnovers
stats$EFF <- stats$EFF / stats$games_played
sink(file = 'efficiency-summary.txt')
str(dat)
sink()
merged <-merge(roster, stats, by = "player")
View(merged)
View(merged)
# ==================================================================
# Title: HW03
# Description: https://github.com/ucb-stat133/stat133-fall-2017/blob/master/labs/lab06-more-dplyr-ggplot.md
# Input(s): what are the main inputs (list of inputs)
# Output(s): what are the main outputs (list of outputs)
# Author: Tyler Larsen
# Date: 10-15-2017
# ==================================================================
library("dplyr")
setwd('/users/tylerlarsen/desktop/stat133/stat133-hws-fall17/hw03/data')
roster <- read.csv("nba2017-roster.csv")
stats <- read.csv("nba2017-stats.csv")
stats$missed_fg <- stats$field_goals_atts - stats$field_goals_made
stats$missed_ft < stats$points1_atts - stats$points1_made
stats$points <- stats$points1_made + 2*stats$points2_made + 3*stats$points3_made
stats$rebounds <- stats$def_rebounds + stats$off_rebounds
stats$EFF <-  stats$points + stats$rebounds + stats$assists + stats$steals + stats$blocks
- stats$missed_fg - stats$missed_ft - stats$turnovers
stats$EFF <- stats$EFF / stats$games_played
setwd('/users/tylerlarsen/desktop/stat133/stat133-hws-fall17/hw03/output/')
sink(file = 'efficiency-summary.txt')
str(dat)
sink()
roster_stats <-merge(roster, stats, by = "player")
# ==================================================================
# Title: HW03
# Description: https://github.com/ucb-stat133/stat133-fall-2017/blob/master/labs/lab06-more-dplyr-ggplot.md
# Input(s): what are the main inputs (list of inputs)
# Output(s): what are the main outputs (list of outputs)
# Author: Tyler Larsen
# Date: 10-15-2017
# ==================================================================
library("dplyr")
setwd('/users/tylerlarsen/desktop/stat133/stat133-hws-fall17/hw03/data')
roster <- read.csv("nba2017-roster.csv")
stats <- read.csv("nba2017-stats.csv")
stats$missed_fg <- stats$field_goals_atts - stats$field_goals_made
stats$missed_ft < stats$points1_atts - stats$points1_made
stats$points <- stats$points1_made + 2*stats$points2_made + 3*stats$points3_made
stats$rebounds <- stats$def_rebounds + stats$off_rebounds
stats$EFF <-  stats$points + stats$rebounds + stats$assists + stats$steals + stats$blocks
- stats$missed_fg - stats$missed_ft - stats$turnovers
stats$EFF <- stats$EFF / stats$games_played
setwd('/users/tylerlarsen/desktop/stat133/stat133-hws-fall17/hw03/output/')
sink(file = 'efficiency-summary.txt')
str(dat)
sink()
roster_stats <-merge(roster, stats, by = "player")
teams <- full_table%>%
group_by(team) %>%
summarize(stats$experience = round(sum(stats$experience),2),
salary = round(sum(stats$salary)/1000000, 2),
points3 = sum(stats$points3_made),
points2 = sum(stats$points2_made),
free_throws = sum(stats$points1_made),
points = sum(stats$points),
off_rebounds = sum(stats$off_rebounds),
def_rebounds = sum(def_rebounds),
assists = sum(stats$assists),
steals = sum(stats$steals),
blocks = sum(stats$blocks),
turnovers = sum(stats$turnovers),
fouls = sum(stats$fouls),
eff = sum(stats$EFF))
sink(file = 'team-summary.txt')
str(teams)
sink()
setwd('/users/tylerlarsen/desktop/stat133/stat133-hws-fall17/hw03/data/')
write.csv(teams, "nba2017-teams.csv")
setwd('/users/tylerlarsen/desktop/stat133/stat133-hws-fall17/hw03/images/')
pdf(filename = "starplot.pdf")
stars(teams[ ,-1], labels = teams$team)
dev.off()
gg_pts_salary <- plot(x = teams2$experience, y = teams2$salary,
xlab = 'Experience', ylab = 'Salary')
ggsave(filename = "experience_salary.pdf", plot = gg_pts_salary,
width = 7, height = 5)
teams <- full_table%>%
group_by(team) %>%
summarize(stats$experience = round(sum(stats$experience),2),
salary = round(sum(stats$salary)/1000000, 2),
points3 = sum(stats$points3_made),
points2 = sum(stats$points2_made),
free_throws = sum(stats$points1_made),
points = sum(stats$points),
off_rebounds = sum(stats$off_rebounds),
def_rebounds = sum(def_rebounds),
assists = sum(stats$assists),
steals = sum(stats$steals),
blocks = sum(stats$blocks),
turnovers = sum(stats$turnovers),
fouls = sum(stats$fouls),
eff = sum(stats$EFF))
teams <- full_table %>%
group_by(team) %>%
summarise(stats$experience = round(sum(stats$experience),2),
salary = round(sum(stats$salary)/1000000, 2),
points3 = sum(stats$points3_made),
points2 = sum(stats$points2_made),
free_throws = sum(stats$points1_made),
points = sum(stats$points),
off_rebounds = sum(stats$off_rebounds),
def_rebounds = sum(def_rebounds),
assists = sum(stats$assists),
steals = sum(stats$steals),
blocks = sum(stats$blocks),
turnovers = sum(stats$turnovers),
fouls = sum(stats$fouls),
eff = sum(stats$EFF))
teams <- data.frame %>%
group_by(team) %>%
summarise(stats$experience = round(sum(stats$experience),2),
salary = round(sum(stats$salary)/1000000, 2),
points3 = sum(stats$points3_made),
points2 = sum(stats$points2_made),
free_throws = sum(stats$points1_made),
points = sum(stats$points),
off_rebounds = sum(stats$off_rebounds),
def_rebounds = sum(def_rebounds),
assists = sum(stats$assists),
steals = sum(stats$steals),
blocks = sum(stats$blocks),
turnovers = sum(stats$turnovers),
fouls = sum(stats$fouls),
eff = sum(stats$EFF))
teams <- stats %>%
group_by(team) %>%
summarise(stats$experience = round(sum(stats$experience),2),
salary = round(sum(stats$salary)/1000000, 2),
points3 = sum(stats$points3_made),
points2 = sum(stats$points2_made),
free_throws = sum(stats$points1_made),
points = sum(stats$points),
off_rebounds = sum(stats$off_rebounds),
def_rebounds = sum(def_rebounds),
assists = sum(stats$assists),
steals = sum(stats$steals),
blocks = sum(stats$blocks),
turnovers = sum(stats$turnovers),
fouls = sum(stats$fouls),
eff = sum(stats$EFF))
teams <- stats %>%
group_by(team) %>%
summarise(experience = round(sum(experience),2),
salary = round(sum(salary)/1000000, 2),
points3 = sum(points3_made),
points2 = sum(points2_made),
free_throws = sum(points1_made),
points = sum(points),
off_rebounds = sum(off_rebounds),
def_rebounds = sum(def_rebounds),
assists = sum(assists),
steals = sum(steals),
blocks = sum(blocks),
turnovers = sum(turnovers),
fouls = sum(fouls),
eff = sum(EFF))
teams <- roster_stats %>%
group_by(team) %>%
summarise(experience = round(sum(experience),2),
salary = round(sum(salary)/1000000, 2),
points3 = sum(points3_made),
points2 = sum(points2_made),
free_throws = sum(points1_made),
points = sum(points),
off_rebounds = sum(off_rebounds),
def_rebounds = sum(def_rebounds),
assists = sum(assists),
steals = sum(steals),
blocks = sum(blocks),
turnovers = sum(turnovers),
fouls = sum(fouls),
eff = sum(EFF))
# ==================================================================
# Title: HW03
# Description: https://github.com/ucb-stat133/stat133-fall-2017/blob/master/labs/lab06-more-dplyr-ggplot.md
# Input(s): what are the main inputs (list of inputs)
# Output(s): what are the main outputs (list of outputs)
# Author: Tyler Larsen
# Date: 10-15-2017
# ==================================================================
library("dplyr")
setwd('/users/tylerlarsen/desktop/stat133/stat133-hws-fall17/hw03/data')
roster <- read.csv("nba2017-roster.csv")
stats <- read.csv("nba2017-stats.csv")
stats$missed_fg <- stats$field_goals_atts - stats$field_goals_made
stats$missed_ft < stats$points1_atts - stats$points1_made
stats$points <- stats$points1_made + 2*stats$points2_made + 3*stats$points3_made
stats$rebounds <- stats$def_rebounds + stats$off_rebounds
stats$EFF <-  stats$points + stats$rebounds + stats$assists + stats$steals + stats$blocks
- stats$missed_fg - stats$missed_ft - stats$turnovers
stats$EFF <- stats$EFF / stats$games_played
setwd('/users/tylerlarsen/desktop/stat133/stat133-hws-fall17/hw03/output/')
sink(file = 'efficiency-summary.txt')
str(dat)
sink()
roster_stats <-merge(roster, stats, by = "player")
teams <- roster_stats %>%
group_by(team) %>%
summarise(experience = round(sum(experience),2),
salary = round(sum(salary)/1000000, 2),
points3 = sum(points3_made),
points2 = sum(points2_made),
free_throws = sum(points1_made),
points = sum(points),
off_rebounds = sum(off_rebounds),
def_rebounds = sum(def_rebounds),
assists = sum(assists),
steals = sum(steals),
blocks = sum(blocks),
turnovers = sum(turnovers),
fouls = sum(fouls),
eff = sum(EFF))
sink(file = 'team-summary.txt')
str(teams)
sink()
setwd('/users/tylerlarsen/desktop/stat133/stat133-hws-fall17/hw03/data/')
write.csv(teams, "nba2017-teams.csv")
setwd('/users/tylerlarsen/desktop/stat133/stat133-hws-fall17/hw03/images/')
pdf(filename = "starplot.pdf")
stars(teams[ ,-1], labels = teams$team)
dev.off()
gg_pts_salary <- plot(x = teams2$experience, y = teams2$salary,
xlab = 'Experience', ylab = 'Salary')
ggsave(filename = "experience_salary.pdf", plot = gg_pts_salary,
width = 7, height = 5)
library("ggplot")
library("ggplot2")
# ==================================================================
# Title: HW03
# Description: https://github.com/ucb-stat133/stat133-fall-2017/blob/master/labs/lab06-more-dplyr-ggplot.md
# Input(s): what are the main inputs (list of inputs)
# Output(s): what are the main outputs (list of outputs)
# Author: Tyler Larsen
# Date: 10-15-2017
# ==================================================================
library("dplyr")
library("ggplot2")
setwd('/users/tylerlarsen/desktop/stat133/stat133-hws-fall17/hw03/data')
roster <- read.csv("nba2017-roster.csv")
stats <- read.csv("nba2017-stats.csv")
stats$missed_fg <- stats$field_goals_atts - stats$field_goals_made
stats$missed_ft < stats$points1_atts - stats$points1_made
stats$points <- stats$points1_made + 2*stats$points2_made + 3*stats$points3_made
stats$rebounds <- stats$def_rebounds + stats$off_rebounds
stats$EFF <-  stats$points + stats$rebounds + stats$assists + stats$steals + stats$blocks
- stats$missed_fg - stats$missed_ft - stats$turnovers
stats$EFF <- stats$EFF / stats$games_played
setwd('/users/tylerlarsen/desktop/stat133/stat133-hws-fall17/hw03/output/')
sink(file = 'efficiency-summary.txt')
str(dat)
sink()
roster_stats <-merge(roster, stats, by = "player")
teams <- roster_stats %>%
group_by(team) %>%
summarise(experience = round(sum(experience),2),
salary = round(sum(salary)/1000000, 2),
points3 = sum(points3_made),
points2 = sum(points2_made),
free_throws = sum(points1_made),
points = sum(points),
off_rebounds = sum(off_rebounds),
def_rebounds = sum(def_rebounds),
assists = sum(assists),
steals = sum(steals),
blocks = sum(blocks),
turnovers = sum(turnovers),
fouls = sum(fouls),
eff = sum(EFF))
sink(file = 'team-summary.txt')
str(teams)
sink()
setwd('/users/tylerlarsen/desktop/stat133/stat133-hws-fall17/hw03/data/')
write.csv(teams, "nba2017-teams.csv")
setwd('/users/tylerlarsen/desktop/stat133/stat133-hws-fall17/hw03/images/')
pdf(filename = "starplot.pdf")
stars(teams[ ,-1], labels = teams$team)
dev.off()
gg_pts_salary <- plot(x = teams2$experience, y = teams2$salary,
xlab = 'Experience', ylab = 'Salary')
ggsave(filename = "experience_salary.pdf", plot = gg_pts_salary,
width = 7, height = 5)
gg_pts_salary <- plot(x = teams2$experience, y = teams2$salary,
xlab = 'Experience', ylab = 'Salary')
gg_pts_salary <- plot(x = teams$experience, y = teams$salary,
xlab = 'Experience', ylab = 'Salary')
ggsave(filename = "experience_salary.pdf", plot = gg_pts_salary,
width = 7, height = 5)
summary(teams)
setwd('/users/tylerlarsen/desktop/stat133/stat133-hws-fall17/hw03/data/')
sink(file = 'team-summary.txt')
str(teams)
sink()
salary_ranking <- ggplot(roster_stats, aes(x = roster_stats$salary, y = roster_stats$team)
)
salary_ranking <- ggplot(oster_stats$salary, roster_stats$team)
salary_ranking <- ggplot(roster_stats$salary, roster_stats$team)
salary_ranking <- ggplot(roster_stats, aes(x = roster_stats$salary, y = roster_stats$team)
+geom_bar(stat='identity')
)
salary_ranking <- ggplot(roster_stats, aes(roster_stats$salary, roster_stats$team))
salary_ranking + geom_bar()
prcomp(roster_stats, scale. = TRUE)
pca_points3 <- prcomp((3*roster_stats$points3_made), scale. = TRUE)
pca_points3 <- prcomp((3*roster_stats$points3_made), scale. = TRUE)
pca_points2 <- prcomp((2*roster_stats$points2_made), scale. = TRUE)
pca <- data.frame(pca_points2, pca_points3)
View(roster_stats)
View(roster_stats)
pca_points3 <- prcomp((3*roster_stats$points3_made), scale. = TRUE)
pca_points2 <- prcomp((2*roster_stats$points2_made), scale. = TRUE)
pca_ft <- prcomp((roster_stats$points1_made), scale. = TRUE)
pca_orb <- prcomp((roster_stats$off_rebounds), scale. = TRUE)
pca_drf <- prcomp((roster_stats$def_rebounds), scale. = TRUE)
pca_assist <- prcomp((roster_stats$assists), scale. = TRUE)
pca_steals <- prcomp((roster_stats$steals), scale. = TRUE)
pca_blocks <- prcomp((roster_stats$blocks), scale. = TRUE)
pca_trnov <- prcomp((roster_stats$turnovers), scale. = TRUE)
pca_fouls <- prcomp((roster_stats$fouls), scale. = TRUE)
pca <- data.frame(pca_points2, pca_points3)
pca_points3 <- prcomp((3*roster_stats$points3_made), scale. = TRUE)
pca_points2 <- prcomp((2*roster_stats$points2_made), scale. = TRUE)
pca_ft <- prcomp((roster_stats$points1_made), scale. = TRUE)
pca_orb <- prcomp((roster_stats$off_rebounds), scale. = TRUE)
pca_drf <- prcomp((roster_stats$def_rebounds), scale. = TRUE)
pca_assist <- prcomp((roster_stats$assists), scale. = TRUE)
pca_steals <- prcomp((roster_stats$steals), scale. = TRUE)
pca_blocks <- prcomp((roster_stats$blocks), scale. = TRUE)
pca_trnov <- prcomp((roster_stats$turnovers), scale. = TRUE)
pca_fouls <- prcomp((roster_stats$fouls), scale. = TRUE)
pca_points3 <- prcomp((3*roster_stats$points3_made), scale. = TRUE)
pca_points2 <- prcomp((2*roster_stats$points2_made), scale. = TRUE)
pca_ft <- prcomp((roster_stats$points1_made), scale. = TRUE)
pca_orb <- prcomp((roster_stats$off_rebounds), scale. = TRUE)
pca_drf <- prcomp((roster_stats$def_rebounds), scale. = TRUE)
pca_assist <- prcomp((roster_stats$assists), scale. = TRUE)
pca_steals <- prcomp((roster_stats$steals), scale. = TRUE)
pca_blocks <- prcomp((roster_stats$blocks), scale. = TRUE)
pca_trnov <- prcomp((roster_stats$turnovers), scale. = TRUE)
pca_fouls <- prcomp((roster_stats$fouls), scale. = TRUE)
pca_assist$rotation
libary("FactoMineR")
load("FactoMineR")
library("FactoMineR")
load("FactoMineR")
library(FactoMineR)
library("FactoMineR")
pca <- select(roster_stats, 3*roster_stats$points3_made, 2*roster_stats$points2_made, roster_stats$points1_made, roster_stats$off_rebounds, roster_stats$def_rebounds, roster_stats$assists, roster_stats$steals, roster_stats$blocks, roster_stats$turnovers, roster_stats$fouls)
pca <- select(roster_stats, roster_stats$points3_made, roster_stats$points2_made, roster_stats$points1_made, roster_stats$off_rebounds, roster_stats$def_rebounds, roster_stats$assists, roster_stats$steals, roster_stats$blocks, roster_stats$turnovers, roster_stats$fouls)
salary_ranking <- ggplot(roster_stats, aes(roster_stats$salary, roster_stats$team))
salary_ranking + geom_bar()
View(roster_stats)
View(roster_stats)
View(roster_stats)
View(teams)
salary_ranking <- ggplot(teams, aes(teams$salary, teams$team))
salary_ranking + geom_bar()
ggplot(data = teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat = 'identity') +
labs(x = "Team", y = "Salary (in millions)")  +
geom_hline(yintercept = mean(teams$salary), color = "red", size = 1) +
coord_flip()
ggplot(data = teams, aes(x = reorder(team, points), y = points)) +
geom_bar(stat = 'identity') +
labs(x = "Team", y = "Points")  +
geom_hline(yintercept = mean(teams$points), color = "red", size = 1) +
coord_flip()
ggplot(data = teams, aes(x = reorder(team, eff), y = eff)) +
geom_bar(stat = 'identity') +
labs(x = "Team", y = "Efficiency")  +
geom_hline(yintercept = mean(teams$eff), color = "red", size = 1) +
coord_flip()
libary("FactoMineR")
library("FactoMineR")
points3_total <- 3*roster_stats$points3_made
points2_total <-  2*roster_stats$points2_made
pca <- select(roster_stats, points3_total, points2_total, roster_stats$points1_made, roster_stats$off_rebounds, roster_stats$def_rebounds, roster_stats$assists, roster_stats$steals, roster_stats$blocks, roster_stats$turnovers, roster_stats$fouls)
pca <- select(teams, teams$points3, teams$points2, teams$points1_made, teams$off_rebounds, teams$def_rebounds, teams$assists, teamss$steals, teams$blocks, teams$turnovers, teams$fouls)
pca <- select(teams, teams$points3, teams$points2, teams$points1, teams$off_rebounds, teams$def_rebounds, teams$assists, teams$steals, teams$blocks, teams$turnovers, teams$fouls)
pca <- select(teams, teams$points3, teams$points2, teams$free_throws, teams$off_rebounds, teams$def_rebounds, teams$assists, teams$steals, teams$blocks, teams$turnovers, teams$fouls)
pca <- data.frame(select(teams, teams$points3, teams$points2, teams$free_throws, teams$off_rebounds, teams$def_rebounds, teams$assists, teams$steals, teams$blocks, teams$turnovers, teams$fouls))
pca <- data.frame(teams$points3, teams$points2, teams$free_throws, teams$off_rebounds, teams$def_rebounds, teams$assists, teams$steals, teams$blocks, teams$turnovers, teams$fouls)
pca_points3 <- prcomp((3*roster_stats$points3_made), scale. = TRUE)
pca_points2 <- prcomp((2*roster_stats$points2_made), scale. = TRUE)
pca_ft <- prcomp((roster_stats$points1_made), scale. = TRUE)
pca_orb <- prcomp((roster_stats$off_rebounds), scale. = TRUE)
pca_drf <- prcomp((roster_stats$def_rebounds), scale. = TRUE)
pca_assist <- prcomp((roster_stats$assists), scale. = TRUE)
pca_steals <- prcomp((roster_stats$steals), scale. = TRUE)
pca_blocks <- prcomp((roster_stats$blocks), scale. = TRUE)
pca_trnov <- prcomp((roster_stats$turnovers), scale. = TRUE)
pca_fouls <- prcomp((roster_stats$fouls), scale. = TRUE)
pca <- prcomp()
pca <- data.frame(teams$points3, teams$points2, teams$free_throws, teams$off_rebounds, teams$def_rebounds, teams$assists, teams$steals, teams$blocks, teams$turnovers, teams$fouls)
prcomp(pca, scale. = TRUE)
pca_points3 <- prcomp((3*roster_stats$points3_made), scale. = TRUE)
pca_points2 <- prcomp((2*roster_stats$points2_made), scale. = TRUE)
pca_ft <- prcomp((roster_stats$points1_made), scale. = TRUE)
pca_orb <- prcomp((roster_stats$off_rebounds), scale. = TRUE)
pca_drf <- prcomp((roster_stats$def_rebounds), scale. = TRUE)
pca_assist <- prcomp((roster_stats$assists), scale. = TRUE)
pca_steals <- prcomp((roster_stats$steals), scale. = TRUE)
pca_blocks <- prcomp((roster_stats$blocks), scale. = TRUE)
pca_trnov <- prcomp((roster_stats$turnovers), scale. = TRUE)
pca_fouls <- prcomp((roster_stats$fouls), scale. = TRUE)
pca_categories <- data.frame(teams$points3, teams$points2, teams$free_throws, teams$off_rebounds, teams$def_rebounds, teams$assists, teams$steals, teams$blocks, teams$turnovers, teams$fouls)
pca <- prcomp(pca_categories, scale. = TRUE)
pca_categories <- data.frame(teams$points3, teams$points2, teams$free_throws, teams$off_rebounds, teams$def_rebounds, teams$assists, teams$steals, teams$blocks, teams$turnovers, teams$fouls)
pca <- prcomp(pca_categories, scale. = TRUE)
plot(pca$, main="Scatterplot Example",
pca_categories <- data.frame(teams$points3, teams$points2, teams$free_throws, teams$off_rebounds, teams$def_rebounds, teams$assists, teams$steals, teams$blocks, teams$turnovers, teams$fouls)
pca <- prcomp(pca_categories, scale. = TRUE)
pca_categories <- data.frame(teams$points3, teams$points2, teams$free_throws, teams$off_rebounds, teams$def_rebounds, teams$assists, teams$steals, teams$blocks, teams$turnovers, teams$fouls)
pca <- prcomp(pca_categories, scale. = TRUE)
pca
pca_categories <- data.frame(teams$points3, teams$points2, teams$free_throws, teams$off_rebounds, teams$def_rebounds, teams$assists, teams$steals, teams$blocks, teams$turnovers, teams$fouls)
pca <- prcomp(pca_categories, scale. = TRUE)
pca
plot(pca$PC1,pca$PC2, main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
pca_categories <- data.frame(teams$points3, teams$points2, teams$free_throws, teams$off_rebounds, teams$def_rebounds, teams$assists, teams$steals, teams$blocks, teams$turnovers, teams$fouls)
pca <- prcomp(pca_categories, scale. = TRUE)
pca
pca2 <- as.data.frame(pca$x)
plot(pca2$PC1,pca2$PC2, main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
pca_categories <- data.frame(teams$points3, teams$points2, teams$free_throws, teams$off_rebounds, teams$def_rebounds, teams$assists, teams$steals, teams$blocks, teams$turnovers, teams$fouls)
pca <- prcomp(pca_categories, scale. = TRUE)
pca
pca2 <- as.data.frame(pca$x)
plot(pca2$PC1,pca2$PC2, main="Scatterplot Example",
xlab="PCA1 ", ylab="PCA2 ", pch=19)
pca2
pca_categories <- data.frame(teams$points3, teams$points2, teams$free_throws, teams$off_rebounds, teams$def_rebounds, teams$assists, teams$steals, teams$blocks, teams$turnovers, teams$fouls)
pca <- prcomp(pca_categories, scale. = TRUE)
pca2 <- as.data.frame(pca$x)
pca2
plot(pca2$PC1,pca2$PC2, main="Scatterplot Example",
xlab="PCA1 ", ylab="PCA2 ", pch=19)
pca3 <- (pca2$PC1-min(pca2$PC1)) / (max(pca2$PC1) - min(pca2$PC1))
teams_pc <- data.frame(teams$team, pca3)
pca_categories <- data.frame(teams$points3, teams$points2, teams$free_throws, teams$off_rebounds, teams$def_rebounds, teams$assists, teams$steals, teams$blocks, teams$turnovers, teams$fouls)
pca <- prcomp(pca_categories, scale. = TRUE)
pca2 <- as.data.frame(pca$x)
pca2
plot(pca2$PC1,pca2$PC2, main="Scatterplot Example",
xlab="PCA1 ", ylab="PCA2 ", pch=19)
pca3 <- (pca2$PC1-min(pca2$PC1)) / (max(pca2$PC1) - min(pca2$PC1))
teams_pc <- data.frame(teams$team, pca3)
ggplot(data = teams_pc, aes(x = reorder(team, pca3), y = pca3)) +
geom_bar(stat = 'identity') +
labs(x = "Team", y = "PCA1")  +
geom_hline(yintercept = mean(teams_pc$pca3), color = "red", size = 1) +
coord_flip()
pca_categories <- data.frame(teams$points3, teams$points2, teams$free_throws, teams$off_rebounds, teams$def_rebounds, teams$assists, teams$steals, teams$blocks, teams$turnovers, teams$fouls)
pca <- prcomp(pca_categories, scale. = TRUE)
pca2 <- as.data.frame(pca$x)
pca2
plot(pca2$PC1,pca2$PC2, main="Scatterplot Example",
xlab="PCA1 ", ylab="PCA2 ", pch=19)
pca3 <- (pca2$PC1-min(pca2$PC1)) / (max(pca2$PC1) - min(pca2$PC1))
teams_pc <- data.frame(teams$team, pca3)
ggplot(data = teams_pc, aes(x = reorder(teams.team, pca3), y = pca3)) +
geom_bar(stat = 'identity') +
labs(x = "Team", y = "PCA1")  +
geom_hline(yintercept = mean(teams_pc$pca3), color = "red", size = 1) +
coord_flip()
ggplot(data = teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat = 'identity') +
labs(x = "Team", y = "Salary (in millions)")  +
geom_hline(yintercept = mean(teams$salary), color = "red", size = 1) +
coord_flip()
library(ggplot2)
load(ggplot2)
